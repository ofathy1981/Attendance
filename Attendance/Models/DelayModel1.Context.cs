//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Attendance.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DelayEntities : DbContext
    {
        public DelayEntities()
            : base("name=DelayEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DELAY> DELAYs { get; set; }
    
        public virtual ObjectResult<delay_count_Result> delay_count(string the_input_date, string dept)
        {
            var the_input_dateParameter = the_input_date != null ?
                new ObjectParameter("the_input_date", the_input_date) :
                new ObjectParameter("the_input_date", typeof(string));
    
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<delay_count_Result>("delay_count", the_input_dateParameter, deptParameter);
        }
    
        public virtual ObjectResult<DELAY> delayfunc(string the_input_date, string dept)
        {
            var the_input_dateParameter = the_input_date != null ?
                new ObjectParameter("the_input_date", the_input_date) :
                new ObjectParameter("the_input_date", typeof(string));
    
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DELAY>("delayfunc", the_input_dateParameter, deptParameter);
        }
    
        public virtual ObjectResult<DELAY> delayfunc(string the_input_date, string dept, MergeOption mergeOption)
        {
            var the_input_dateParameter = the_input_date != null ?
                new ObjectParameter("the_input_date", the_input_date) :
                new ObjectParameter("the_input_date", typeof(string));
    
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DELAY>("delayfunc", mergeOption, the_input_dateParameter, deptParameter);
        }
    }
}
