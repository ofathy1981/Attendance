//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Attendance.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AttLoginEntities1 : DbContext
    {
        public AttLoginEntities1()
            : base("name=AttLoginEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<byinterval> byintervals { get; set; }
    
        public virtual ObjectResult<getbyinterval_Result> getbyinterval(string frominputdate, string toinputdate, string empcode)
        {
            var frominputdateParameter = frominputdate != null ?
                new ObjectParameter("frominputdate", frominputdate) :
                new ObjectParameter("frominputdate", typeof(string));
    
            var toinputdateParameter = toinputdate != null ?
                new ObjectParameter("toinputdate", toinputdate) :
                new ObjectParameter("toinputdate", typeof(string));
    
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getbyinterval_Result>("getbyinterval", frominputdateParameter, toinputdateParameter, empcodeParameter);
        }
    
        public virtual ObjectResult<byinterval> byperiod(string frominputdate, string toinputdate, string empcode)
        {
            var frominputdateParameter = frominputdate != null ?
                new ObjectParameter("frominputdate", frominputdate) :
                new ObjectParameter("frominputdate", typeof(string));
    
            var toinputdateParameter = toinputdate != null ?
                new ObjectParameter("toinputdate", toinputdate) :
                new ObjectParameter("toinputdate", typeof(string));
    
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byinterval>("byperiod", frominputdateParameter, toinputdateParameter, empcodeParameter);
        }
    
        public virtual ObjectResult<byinterval> byperiod(string frominputdate, string toinputdate, string empcode, MergeOption mergeOption)
        {
            var frominputdateParameter = frominputdate != null ?
                new ObjectParameter("frominputdate", frominputdate) :
                new ObjectParameter("frominputdate", typeof(string));
    
            var toinputdateParameter = toinputdate != null ?
                new ObjectParameter("toinputdate", toinputdate) :
                new ObjectParameter("toinputdate", typeof(string));
    
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byinterval>("byperiod", mergeOption, frominputdateParameter, toinputdateParameter, empcodeParameter);
        }
    
        public virtual ObjectResult<getbyinterval2_Result> getbyinterval2(string frominputdate, string toinputdate, string empcode)
        {
            var frominputdateParameter = frominputdate != null ?
                new ObjectParameter("frominputdate", frominputdate) :
                new ObjectParameter("frominputdate", typeof(string));
    
            var toinputdateParameter = toinputdate != null ?
                new ObjectParameter("toinputdate", toinputdate) :
                new ObjectParameter("toinputdate", typeof(string));
    
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getbyinterval2_Result>("getbyinterval2", frominputdateParameter, toinputdateParameter, empcodeParameter);
        }
    
        public virtual int getbyinterval22(string frominputdate, string toinputdate, string empcode)
        {
            var frominputdateParameter = frominputdate != null ?
                new ObjectParameter("frominputdate", frominputdate) :
                new ObjectParameter("frominputdate", typeof(string));
    
            var toinputdateParameter = toinputdate != null ?
                new ObjectParameter("toinputdate", toinputdate) :
                new ObjectParameter("toinputdate", typeof(string));
    
            var empcodeParameter = empcode != null ?
                new ObjectParameter("empcode", empcode) :
                new ObjectParameter("empcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getbyinterval22", frominputdateParameter, toinputdateParameter, empcodeParameter);
        }
    }
}
